/**
*
* HAAR.js Feature Detection Library based on Viola-Jones Haar Detection algorithm
* Port of jviolajones (Java) which is a port of openCV C++ Haar Detector
*
* version: 0.2
*
*
* @contributor Nikos M.  (http://nikos-web-development.netai.net/)
* https://github.com/foo123/HAAR.js
* @contributor maxired (https://github.com/maxired)
*
**/
(function(){var j;j=typeof exports!=="undefined"?exports:this.HAAR={};j.Detector=function(c){this.haardata=c;this.async=!0;this.canvas=this.Image=this.onComplete=null};j.Detector.prototype.image=function(c,g,a){this.Image=c;this.canvas=a||document.createElement("canvas");typeof g=="undefined"&&(g=0.5);this.ratio=g;this.async=!0;this.canvas.width=this.ratio*c.width;this.canvas.height=this.ratio*c.height;this.canvas.getContext("2d").drawImage(c,0,0,c.width,c.height,0,0,this.ratio*c.width,this.ratio*
c.height);return this};j.Detector.prototype.complete=function(c){this.onComplete=c;return this};j.Detector.prototype.detect=function(c,g,a,b,e){typeof e=="undefined"&&(e=!0);this.doCannyPruning=e;this.ret=[];var e=this.haardata.size1,f=this.haardata.size2;this.computeGray(this.canvas);this.maxScale=Math.min(this.width/e,this.height/f);this.canny=null;if(this.doCannyPruning)this.canny=this.IntegralCanny(this.img);this.scale=c;this.min_neighbors=b;this.scale_inc=g;this.increment=a;this.ready=!1;var d=
this;this.interval=setInterval(function(){d.detectAsync()},30)};j.Detector.prototype.computeGray=function(c){this.gray=[];this.img=[];this.squares=[];var g=c.getContext("2d").getImageData(0,0,c.width,c.height);this.width=g.width;this.height=g.height;var c=g.width,a=g.height,b,e,f,d,h,i=g.data;for(e=0;e<c;e++)for(f=b=g=0;f<a;f++)ind=f*c+e,d=ind*4,red=i[d],green=i[d+1],blue=i[d+2],d=0.3*red+0.59*green+0.11*blue,h=d*d,this.img[ind]=d,this.gray[ind]=(e>0?this.gray[e-1+f*c]:0)+g+d,this.squares[ind]=(e>
0?this.squares[e-1+f*c]:0)+b+h,g+=d,b+=h};j.Detector.prototype.detectAsync=function(){var c=this.haardata.size1,g=this.width,a=this.height;if(this.scale<=this.maxScale){for(var c=Math.floor(this.scale*c*this.increment),b=Math.floor(this.scale*this.haardata.size1),e=0;e<g-b;e+=c)for(var f=0;f<a-b;f+=c){if(this.doCannyPruning){var d=(this.canny[e+b+(f+b)*g]+this.canny[e+f*g]-this.canny[e+(f+b)*g]-this.canny[e+b+f*g])/b/b;if(d<20||d>100)continue}for(var d=!0,h=0;h<this.haardata.stages.length;h++)if(d=
this.evalStage(h,e,f,this.scale),d==!1)break;d&&this.ret.push({x:e,y:f,width:b,height:b})}this.scale*=this.scale_inc}else clearInterval(this.interval),this.objects=this.merge(this.ret,this.min_neighbors),this.ready=!0,this.async&&this.onComplete&&this.onComplete.call(this)};j.Detector.prototype.IntegralCanny=function(c){var g=[],a,b,e,f=this.width,d=this.height;for(a=2;a<f-2;a++)for(b=2;b<d-2;b++)e=0,e+=2*c[a-2+(b-2)*f],e+=4*c[a-2+(b-1)*f],e+=5*c[a-2+(b+0)*f],e+=4*c[a-2+(b+1)*f],e+=2*c[a-2+(b+2)*
f],e+=4*c[a-1+(b-2)*f],e+=9*c[a-1+(b-1)*f],e+=12*c[a-1+(b+0)*f],e+=9*c[a-1+(b+1)*f],e+=4*c[a-1+(b+2)*f],e+=5*c[a+0+(b-2)*f],e+=12*c[a+0+(b-1)*f],e+=15*c[a+0+(b+0)*f],e+=12*c[a+0+(b+1)*f],e+=5*c[a+0+(b+2)*f],e+=4*c[a+1+(b-2)*f],e+=9*c[a+1+(b-1)*f],e+=12*c[a+1+(b+0)*f],e+=9*c[a+1+(b+1)*f],e+=4*c[a+1+(b+2)*f],e+=2*c[a+2+(b-2)*f],e+=4*c[a+2+(b-1)*f],e+=5*c[a+2+(b+0)*f],e+=4*c[a+2+(b+1)*f],e+=2*c[a+2+(b+2)*f],g[a+b*f]=e/159;c=[];for(a=1;a<f-1;a++)for(b=1;b<d-1;b++)c[a+b*f]=Math.abs(-g[a-1+(b-1)*f]+g[a+
1+(b-1)*f]-2*g[a-1+b*f]+2*g[a+1+b*f]-g[a-1+(b+1)*f]+g[a+1+(b+1)*f])+Math.abs(g[a-1+(b-1)*f]+2*g[a+(b-1)*f]+g[a+1+(b-1)*f]-g[a-1+(b+1)*f]-2*g[a+(b+1)*f]-g[a+1+(b+1)*f]);for(a=0;a<f;a++)for(b=e=0;b<d;b++){var h=c[a+b*f];g[a+b*f]=(a>0?g[a-1+b*f]:0)+e+h;e+=h}return g};j.Detector.prototype.merge=function(c,g){for(var a=Array(c.length),b=0;b<a.length;b++)a[b]=0;for(var e=0,f=[],d=0;d<c.length;d++){for(var b=!1,h=0;h<d;h++)this.equals(c[h],c[d])&&(b=!0,a[d]=a[h]);b||(a[d]=e,e++)}for(var h=Array(e),i=Array(e),
d=0;d<e;d++)h[d]=0,i[d]={x:0,y:0,width:0,height:0};for(d=0;d<c.length;d++)h[a[d]]++,i[a[d]].x+=c[d].x,i[a[d]].y+=c[d].y,i[a[d]].height+=c[d].height,i[a[d]].width+=c[d].width;for(d=0;d<e;d++)if(a=h[d],a>=g)b={x:0,y:0,width:0,height:0},b.x=(i[d].x*2+a)/(2*a),b.y=(i[d].y*2+a)/(2*a),b.width=(i[d].width*2+a)/(2*a),b.height=(i[d].height*2+a)/(2*a),f.push(b);if(this.ratio!=1){e=1/this.ratio;for(d=0;d<f.length;d++)a=f[d],a={x:a.x*e,y:a.y*e,width:a.width*e,height:a.height*e},f[d]=a}return f};j.Detector.prototype.equals=
function(c,g){var a=Math.floor(c.width*0.2);if(g.x<=c.x+a&&g.x>=c.x-a&&g.y<=c.y+a&&g.y>=c.y-a&&g.width<=Math.floor(c.width*1.2)&&Math.floor(g.width*1.2)>=c.width)return!0;if(c.x>=g.x&&c.x+c.width<=g.x+g.width&&c.y>=g.y&&c.y+c.height<=g.y+g.height)return!0;return!1};j.Detector.prototype.evalStage=function(c,g,a,b){var e=0,f=this.haardata.stages[c].thres,d,h=this.haardata.stages[c].trees.length;for(d=0;d<h;d++)e+=this.evalTree(c,d,g,a,b);return e>f};j.Detector.prototype.evalTree=function(c,g,a,b,e){for(var f=
this.haardata.stages[c].trees[g].feats,d=0,h=f[d];;)if(this.getLeftOrRight(c,g,d,a,b,e)==0)if(h.has_l)return h.l_val;else d=h.l_node,h=f[d];else if(h.has_r)return h.r_val;else d=h.r_node,h=f[d]};j.Detector.prototype.getLeftOrRight=function(c,g,a,b,e,f){for(var d=Math.floor(f*this.haardata.size1),h=Math.floor(f*this.haardata.size2),i=this.width,j=1/(d*h),l=this.gray,m=this.squares,k=(l[b+d+(e+h)*i]+l[b+e*i]-l[b+(e+h)*i]-l[b+d+e*i])*j,d=(m[b+d+(e+h)*i]+m[b+e*i]-m[b+(e+h)*i]-m[b+d+e*i])*j-k*k,a=this.haardata.stages[c].trees[g].feats[a],
c=a.rects,g=c.length,a=a.thres,d=d>1?Math.sqrt(d):1,m=h=0;m<g;m++){var k=c[m],n=b+Math.floor(f*k.x1),o=b+Math.floor(f*(k.x1+k.y1)),p=e+Math.floor(f*k.x2),q=e+Math.floor(f*(k.x2+k.y2));h+=Math.floor((l[o+q*i]-l[n+q*i]-l[o+p*i]+l[n+p*i])*k.f)}return h*j<a*d?0:1}}).call(this);
