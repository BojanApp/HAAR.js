/**
*
* HAAR.js Feature Detection Library based on Viola-Jones Haar Detection algorithm
* Port of jviolajones (Java) which is a port of openCV C++ Haar Detector
*
* version: 0.2.1
* https://github.com/foo123/HAAR.js
*
*
* @contributor Nikos M.  (http://nikos-web-development.netai.net/)
* @contributor maxired (https://github.com/maxired)
*
**/
(function(n){var n="undefined"!=typeof module&&module.exports?module.exports:"undefined"!=typeof exports?exports:n.HAAR={},r=typeof Float32Array!=="undefined"?Float32Array:Array,o=typeof Float64Array!=="undefined"?Float64Array:Array;n.Detector=function(a){this.haardata=a;this.async=!0;this.canvas=this.Image=this.onComplete=null};n.Detector.prototype={image:function(a,b,h){this.Image=a;this.canvas=h||document.createElement("canvas");typeof b=="undefined"&&(b=0.5);this.ratio=b;this.async=!0;this.canvas.width=
b*a.width;this.canvas.height=b*a.height;this.canvas.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,b*a.width,b*a.height);return this},complete:function(a){this.onComplete=a;return this},detect:function(a,b,h,c,g){typeof g=="undefined"&&(g=!0);this.doCannyPruning=g;this.ret=[];var g=this.haardata.size1,i=this.haardata.size2;this.computeGray(this.canvas);this.maxScale=Math.min(this.width/g,this.height/i);this.canny=null;if(this.doCannyPruning)this.canny=this.IntegralCanny(this.img);this.scale=
a;this.min_neighbors=c;this.scale_inc=b;this.increment=h;this.ready=!1;var d=this;this.interval=setInterval(function(){d.detectAsync()},30)},computeGray:function(a){var b=a.getContext("2d").getImageData(0,0,a.width,a.height),a=b.width,h=b.height,c,g,i,d,e,f,b=b.data;c=a*h;this.width=a;this.height=h;this.gray=new o(c);this.img=new r(c);this.squares=new o(c);for(i=0;i<a;i++)for(d=g=c=0;d<h;d++)ind=d*a+i,e=ind*4,red=b[e],green=b[e+1],blue=b[e+2],e=0.3*red+0.59*green+0.11*blue,f=e*e,c+=e,g+=f,this.img[ind]=
e,this.gray[ind]=(i>0?this.gray[i-1+d*a]:0)+c,this.squares[ind]=(i>0?this.squares[i-1+d*a]:0)+g},detectAsync:function(){var a=this.haardata.size1,b=this.width,h=this.height,c,g,i;if(this.scale<=this.maxScale){c=Math.floor(this.scale*a*this.increment);for(var a=Math.floor(this.scale*a),d=0,e=b-a;d<e;d+=c)for(var f=0,k=h-a;f<k;f+=c){if(this.doCannyPruning&&(g=d+(f+a)*b,i=d+f*b,g=this.canny[g+a]+this.canny[i]-this.canny[g]-this.canny[i+a],g=g/a/a,g<20||g>100))continue;g=!0;i=0;for(var j=this.haardata.stages.length;i<
j;i++)if(g=this.evalStage(i,d,f,this.scale),g==!1)break;g&&this.ret.push({x:d,y:f,width:a,height:a})}this.scale*=this.scale_inc}else clearInterval(this.interval),this.objects=this.merge(this.ret,this.min_neighbors),this.ready=!0,this.async&&this.onComplete&&this.onComplete.call(this)},IntegralCanny:function(a){var b,h,c,g=this.width,i=this.height,d,e,f,k;b=g*i;var j=new o(b),m=new o(b);for(b=2;b<g-2;b++)for(h=2;h<i-2;h++)e=h*g,d=e+g,f=d+g,ind_1=e-g,k=ind_1-g,c=0,c+=2*a[b-2+k],c+=4*a[b-2+ind_1],c+=
5*a[b-2+e],c+=4*a[b-2+d],c+=2*a[b-2+f],c+=4*a[b-1+k],c+=9*a[b-1+ind_1],c+=12*a[b-1+e],c+=9*a[b-1+d],c+=4*a[b-1+f],c+=5*a[b+0+k],c+=12*a[b+0+ind_1],c+=15*a[b+0+e],c+=12*a[b+0+d],c+=5*a[b+0+f],c+=4*a[b+1+k],c+=9*a[b+1+ind_1],c+=12*a[b+1+e],c+=9*a[b+1+d],c+=4*a[b+1+f],c+=2*a[b+2+k],c+=4*a[b+2+ind_1],c+=5*a[b+2+e],c+=4*a[b+2+d],c+=2*a[b+2+f],j[b+e]=c/159;for(b=1;b<g-1;b++)for(h=1;h<i-1;h++)e=h*g,d=e+g,ind_1=e-g,a=-j[b-1+ind_1]+j[b+1+ind_1]-2*j[b-1+e]+2*j[b+1+e]-j[b-1+d]+j[b+1+d],d=j[b-1+ind_1]+2*j[b+
ind_1]+j[b+1+ind_1]-j[b-1+d]-2*j[b+d]-j[b+1+d],m[b+e]=Math.abs(a)+Math.abs(d);for(b=0;b<g;b++)for(h=a=0;h<i;h++)e=h*g,d=m[b+e],a+=d,j[b+e]=(b>0?j[b-1+e]:0)+a;return j},merge:function(a,b){for(var h=a.length,c=Array(h),g=0,i=[],d=!1,e,d=0;d<h;d++)c[d]=0;for(var f=0;f<h;f++){d=!1;for(e=0;e<f;e++)this.equals(a[e],a[f])&&(d=!0,c[f]=c[e]);d||(c[f]=g,g++)}h=Array(g);e=Array(g);for(f=0;f<g;f++)h[f]=0,e[f]={x:0,y:0,width:0,height:0};for(f=0;f<a.length;f++)h[c[f]]++,e[c[f]].x+=a[f].x,e[c[f]].y+=a[f].y,e[c[f]].height+=
a[f].height,e[c[f]].width+=a[f].width;for(f=0;f<g;f++)if(c=h[f],c>=b)d={x:0,y:0,width:0,height:0},d.x=(e[f].x*2+c)/(2*c),d.y=(e[f].y*2+c)/(2*c),d.width=(e[f].width*2+c)/(2*c),d.height=(e[f].height*2+c)/(2*c),i.push(d);if(this.ratio!=1){g=1/this.ratio;for(f=0;f<i.length;f++)c=i[f],i[f]={x:c.x*g,y:c.y*g,width:c.width*g,height:c.height*g}}return i},equals:function(a,b){var h=Math.max(Math.floor(a.width*0.2),Math.floor(b.width*0.2));if(b.x<=a.x+h&&b.x>=a.x-h&&b.y<=a.y+h&&b.y>=a.y-h&&b.width<=Math.floor(a.width*
1.2)&&Math.floor(b.width*1.2)>=a.width)return!0;if(a.x>=b.x&&a.x+a.width<=b.x+b.width&&a.y>=b.y&&a.y+a.height<=b.y+b.height)return!0;return!1},evalStage:function(a,b,h,c){var g=0,i=this.haardata.stages[a].thres,d,e=this.haardata.stages[a].trees.length;for(d=0;d<e;d++)g+=this.evalTree(a,d,b,h,c);return g>i},evalTree:function(a,b,h,c,g){for(var i=this.haardata.stages[a].trees[b].feats,d=0,e=i[d];;)if(this.getLeftOrRight(a,b,d,h,c,g)==0)if(e.has_l)return e.l_val;else d=e.l_node,e=i[d];else if(e.has_r)return e.r_val;
else d=e.r_node,e=i[d]},getLeftOrRight:function(a,b,h,c,g,i){for(var d=Math.floor(i*this.haardata.size1),e=Math.floor(i*this.haardata.size2),f=this.width,k=1/(d*e),j=g*f,m=(g+e)*f,e=this.gray,l=this.squares,p=(e[c+d+m]+e[c+j]-e[c+m]-e[c+d+j])*k,d=(l[c+d+m]+l[c+j]-l[c+m]-l[c+d+j])*k-p*p,h=this.haardata.stages[a].trees[b].feats[h],a=h.rects,b=a.length,h=h.thres,d=d>1?Math.sqrt(d):1,m=j=0;m<b;m++){var l=a[m],p=c+Math.floor(i*l.x1),n=c+Math.floor(i*(l.x1+l.y1)),o=g+Math.floor(i*l.x2),q=g+Math.floor(i*
(l.x2+l.y2));j+=Math.floor((e[n+q*f]-e[p+q*f]-e[n+o*f]+e[p+o*f])*l.f)}return j*k<h*d?0:1}}})(this);
